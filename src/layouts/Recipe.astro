---
import type { CollectionEntry } from "astro:content";
import Root from "../layouts/Root.astro";
import {
  Draft,
  HorizontalSeperator,
  Method,
  TimesServes,
  ToolsIngredients,
} from "../components/Display";

type Props = CollectionEntry<"recipes">["data"];

const {
  name,
  image,
  description,
  creativeWorkStatus,
  prepTime,
  cookTime,
  totalTime,
  recipeYield,
  recipeIngredient,
  tool,
  recipeInstructions,
} = Astro.props;
---

<Root title={name} description={description}>
  <article>
    <div class="hero-wrapper">
      {
        image != null && image[0] != null && (
          <img width="300" height="300" src={image[0]} class="hero-image" />
        )
      }
      <h1>{name}</h1>
    </div>
    <div class="description-wrapper">
      <Draft creativeWorkStatus={creativeWorkStatus} />
      <p class="description">{description}</p>
      <TimesServes
        prepTime={prepTime}
        cookTime={cookTime}
        totalTime={totalTime}
        recipeYield={recipeYield}
      />
    </div>
    <div class="tools-ingredients-method" id="test2">
      <ToolsIngredients tool={tool} recipeIngredient={recipeIngredient} />
      <HorizontalSeperator id="tools-ingredients-method-seperator" />
      <Method recipeInstructions={recipeInstructions} />
    </div>
  </article>
</Root>

<script>
  import enquire from "enquire.js";
  import { BP_QUERY_LARGE } from "../consts";

  const toolsIngredientsMethod = document.getElementById(
    "tools-ingredients-method-seperator"
  );

  enquire.register(BP_QUERY_LARGE, {
    match: () => {
      if (toolsIngredientsMethod == null) return;
      toolsIngredientsMethod.style.display = "none";
    },
    unmatch: () => {
      if (toolsIngredientsMethod == null) return;
      toolsIngredientsMethod.style.display = "block";
    },
  });
</script>

<style lang="scss">
  @import "../styles/_globals.scss";

  article {
    max-width: var(--page-max-width);
    margin: auto;
    display: flex;
    flex-direction: column;
    gap: var(--padding-double);
  }

  .hero-wrapper {
    display: flex;
    flex-direction: column;
    gap: var(--padding);
    padding-top: var(--padding-double);
  }

  .hero-image {
    width: 80%;
    height: 80%;
    margin: auto;
    border-radius: var(--border-radius-double);
  }

  h1 {
    text-align: center;
    margin: 0 var(--padding);
  }

  .description-wrapper {
    padding: var(--padding);
    display: flex;
    flex-direction: column;
    gap: var(--padding);
    @include elev-1();
  }

  .description {
    text-align: center;
  }

  .tools-ingredients-method {
    display: flex;
    flex-direction: column;
    gap: var(--padding-double);
  }

  @include bp-small {
    .description-wrapper {
      border-radius: var(--border-radius);
    }
  }

  @include bp-large {
    .tools-ingredients-method {
      flex-direction: row;
    }
  }
</style>
