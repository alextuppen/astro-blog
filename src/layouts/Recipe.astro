---
import type { CollectionEntry } from "astro:content";
import { Root } from "../layouts";
import {
  Draft,
  HorizontalSeperator,
  Method,
  TimesServes,
  ToolsIngredients,
} from "../components";

type Props = CollectionEntry<"recipes">["data"];

const {
  name,
  image,
  description,
  creativeWorkStatus,
  prepTime,
  cookTime,
  totalTime,
  recipeYield,
  recipeIngredient,
  tool,
  recipeInstructions,
} = Astro.props;
---

<Root title={name} description={description}>
  <article>
    <div class="heroWrapper">
      {
        image != null && image[0] != null && (
          <img width="300" height="300" src={image[0]} class="heroImage" />
        )
      }
      <h1>{name}</h1>
    </div>
    <div class="descriptionWrapper">
      <Draft creativeWorkStatus={creativeWorkStatus} />
      <p class="description">{description}</p>
      <TimesServes
        prepTime={prepTime}
        cookTime={cookTime}
        totalTime={totalTime}
        recipeYield={recipeYield}
      />
    </div>
    <div class="toolsIngredientsMethod" id="test2">
      <ToolsIngredients tool={tool} recipeIngredient={recipeIngredient} />
      <HorizontalSeperator id="toolsIngredientsMethodSeperator" />
      <Method recipeInstructions={recipeInstructions} />
    </div>
  </article>
</Root>

<script>
  import enquire from "enquire.js";
  import { BP_QUERY_LARGE } from "../consts";

  const toolsIngredientsMethod = document.getElementById(
    "toolsIngredientsMethodSeperator",
  );

  enquire.register(BP_QUERY_LARGE, {
    match: () => {
      if (toolsIngredientsMethod == null) return;
      toolsIngredientsMethod.style.display = "none";
    },
    unmatch: () => {
      if (toolsIngredientsMethod == null) return;
      toolsIngredientsMethod.style.display = "block";
    },
  });
</script>

<style lang="scss">
  @import "src/styles/_globals.scss";
  @import "src/styles/typography.scss";

  article {
    max-width: var(--pageMaxWidth);
    margin: auto;
    display: flex;
    flex-direction: column;
    gap: var(--paddingDouble);
  }

  .heroWrapper {
    display: flex;
    flex-direction: column;
    gap: var(--padding);
    padding-top: var(--paddingDouble);
  }

  .heroImage {
    width: 80%;
    height: 80%;
    margin: auto;
    border-radius: var(--borderRadiusDouble);
  }

  h1 {
    text-align: center;
    margin: 0 var(--padding);
  }

  .descriptionWrapper {
    padding: var(--padding);
    display: flex;
    flex-direction: column;
    gap: var(--padding);
    @include elev-1();
  }

  .description {
    text-align: center;
  }

  .toolsIngredientsMethod {
    display: flex;
    flex-direction: column;
    gap: var(--paddingDouble);
  }

  @include bp-small {
    .descriptionWrapper {
      border-radius: var(--borderRadius);
    }
  }

  @include bp-large {
    .toolsIngredientsMethod {
      flex-direction: row;
    }
  }
</style>
