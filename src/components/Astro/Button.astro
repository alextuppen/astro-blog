---
interface Props {
  id?: string;
  className?: string;
  variant?: "primary" | "secondary" | "icon" | "largeIcon" | "text";
  handleClick?: (this: HTMLElement, ev: MouseEvent) => any;
  href?: string;
  external?: boolean;
}

const { id, className, variant, href, external = false, ...rest } = Astro.props;

const classList = ["button", variant, className];
---

{
  href ? (
    <a
      id={id}
      class:list={classList}
      href={href}
      target={external ? "_blank" : "_self"}
      rel={external ? "noreferrer noopener" : null}
      {...rest}
    >
      <slot />
    </a>
  ) : (
    <button id={id} class:list={classList} {...rest}>
      <slot />
    </button>
  )
}

<style lang="scss">
  @import "src/styles/_globals.scss";
  @import "src/styles/typography.scss";

  .button {
    display: block;
    color: $text !important;
    background: none;
    border: none;
    text-decoration: none;
    cursor: pointer;
    user-select: none;
  }

  .button:active {
    transform: translateY(0.2rem);
  }

  .textButton:hover,
  .textButton:active {
    text-decoration: underline;
    text-decoration-color: $primary;
    text-decoration-style: double;
  }

  .icon {
    width: 2.5rem;
    height: 2.5rem;
  }

  .largeIcon {
    width: 3rem;
    height: 3rem;
  }

  .primary,
  .secondary {
    white-space: nowrap;
    text-decoration: none;
    text-transform: uppercase;
    letter-spacing: 0.1rem;
    font-size: 1.25rem;
    font-weight: 600;
    display: inline-flex;
    gap: var(--paddingHalf);
    justify-content: center;
    align-items: center;
    box-shadow: 0px 8px 15px $baseColour;
    border-radius: var(--borderRadius);
  }

  .primary {
    padding: calc(var(--paddingHalf) + var(--borderWidth))
      calc(var(--padding) + var(--borderWidth));
    background-color: $primary;
    transition: background-color 0.25s ease-in-out;
    color: $baseColour;
  }

  .primary:hover {
    background-color: $primaryDark;
  }

  .primary:active {
    background-color: $primaryLight;
  }

  .secondary {
    padding: var(--paddingHalf) var(--padding);
    background-color: $baseColour;
    border: var(--borderWidth) solid $primary;
    transition: border 0.25s;
  }

  .secondary:hover {
    background-color: rgba($color: $primary, $alpha: 0.1);
    border-color: $primaryDark;
  }

  .secondary:active {
    background-color: rgba($color: $primary, $alpha: 0.2);
    border-color: $primaryLight;
  }

  @include bp-small {
    .icon {
      width: 2.75rem;
      height: 2.75rem;
    }

    .largeIcon {
      width: 3.5rem;
      height: 3.5rem;
    }
  }

  @include bp-medium {
    .icon {
      width: 3rem;
      height: 3rem;
    }

    .largeIcon {
      width: 4rem;
      height: 4rem;
    }
  }

  @include bp-large {
    .icon {
      width: 3.4rem;
      height: 3.4rem;
    }

    .largeIcon {
      width: 5rem;
      height: 5rem;
    }
  }

  @include bp-xl {
    .icon {
      width: 3.75rem;
      height: 3.75rem;
    }

    .largeIcon {
      width: 6rem;
      height: 6rem;
    }
  }
</style>
