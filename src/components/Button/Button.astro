---
import "./Button.scss";

// export enum ButtonSize {
//   Default,
//   Large,
// }

export enum ButtonVariants {
  Primary,
  Secondary,
  Text,
}

interface Props {
  //   size?: ButtonSize;
  id?: string;
  className?: string;
  variant?: ButtonVariants;
  handleClick?: (this: HTMLElement, ev: MouseEvent) => any;
  href?: string;
  external?: boolean;
  //   icon?: ReactNode;
}

const { id, className, variant, href, external = false } = Astro.props;

const classList = [
  "button",
  {
    // @ts-expect-error
    [className]: className ? className : null,
    primary: variant === ButtonVariants.Primary,
    secondary: variant === ButtonVariants.Secondary,
    text: variant === ButtonVariants.Text,
  },
];
---

{
  href ? (
    <a
      id={id}
      class:list={classList}
      href={href}
      target={external ? "_blank" : "_self"}
      rel={external ? "noreferrer noopener" : null}
    >
      <slot />
    </a>
  ) : (
    <button id={id} class:list={classList}>
      <slot />
    </button>
  )
}
