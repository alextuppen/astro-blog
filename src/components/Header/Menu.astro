---
import Button, { ButtonVariants } from "../Button/Button.astro";
import { internalLinks, externalLinks } from "./Header.astro";
import MenuBurger from "./MenuBurger.astro";
---

<MenuBurger menuBurgerId={"menuBurger"} />
<div class="menu">
  <div class="menuInternal">
    {
      internalLinks.map(({ link, text }) => (
        <Button href={link} variant={ButtonVariants.Text}>
          {text}
        </Button>
      ))
    }
  </div>
  <hr />
  {
    externalLinks.map(({ link, text }) => {
      <Button href={link} variant={ButtonVariants.Text} external>
        {text}
      </Button>;
    })
  }
</div>

<script>
  let open = false;
  const button = document.getElementById("menuBurger");

  if (button) {
    button.dataset.open = "false";

    button.addEventListener("click", () => {
      if (open) {
        open = false;
        button.dataset.open = "false";
      } else {
        open = true;
        button.dataset.open = "true";
      }
    });
  } else {
    console.error("menuBurger button not found!");
  }
</script>

<style lang="scss">
  @import "../../styles/_globals.scss";

  .menu {
    @include elev-8();
    margin-top: calc(var(--padding-half) + var(--border-width));
    padding: var(--padding-half);
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: var(--padding-half);
    border-bottom-left-radius: var(--border-radius);
    border-bottom-right-radius: var(--border-radius);
    border-left: var(--border-width) solid $primary;
    border-bottom: var(--border-width) solid $primary;
    border-right: var(--border-width) solid $primary;
    transition: opacity 250ms ease-in-out, transform 250ms ease-in-out;
    opacity: 0;
    transform-origin: top center;
    transform: scaleY(0);
    [data-enter] & {
      opacity: 1;
      transform: scaleY(1);
    }
  }

  .menuInternal {
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: var(--padding-half);
  }

  .menuSeperator {
    width: 100%;
    border-bottom-color: $text;
  }

  @include bp-small {
    .menuInternal {
      display: none;
    }
  }
</style>
